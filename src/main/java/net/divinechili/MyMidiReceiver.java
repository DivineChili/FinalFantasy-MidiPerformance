package net.divinechili;

import javax.sound.midi.MidiMessage;
import javax.sound.midi.Receiver;
import java.awt.event.KeyEvent;

public class MyMidiReceiver implements Receiver {

    private String name;

    public MyMidiReceiver(String name) {
        this.name = name;
    }

    @Override
    public void send(MidiMessage message, long timeStamp) {
        int hitNoteId = message.getMessage()[1];
        int velocity = message.getMessage()[2];
        if(velocity != 0 && Main.canHoldNote.getValue()) {
            switch (hitNoteId) {
                case(21):
                    Main.canHoldNote.setValue(false);
                    break;
                case(48):
                    Controller.robot.keyPress(KeyEvent.VK_A);
                    break;
                case(49):
                    Controller.robot.keyPress(KeyEvent.VK_Z);
                    break;
                case(50):
                    Controller.robot.keyPress(KeyEvent.VK_S);
                    break;
                case(51):
                    Controller.robot.keyPress(KeyEvent.VK_X);
                    break;
                case(52):
                    Controller.robot.keyPress(KeyEvent.VK_D);
                    break;
                case(53):
                    Controller.robot.keyPress(KeyEvent.VK_F);
                    break;
                case(54):
                    Controller.robot.keyPress(KeyEvent.VK_V);
                    break;
                case(55):
                    Controller.robot.keyPress(KeyEvent.VK_G);
                    break;
                case(56):
                    Controller.robot.keyPress(KeyEvent.VK_B);
                    break;
                case(57):
                    Controller.robot.keyPress(KeyEvent.VK_H);
                    break;
                case(58):
                    Controller.robot.keyPress(KeyEvent.VK_N);
                    break;
                case(59):
                    Controller.robot.keyPress(KeyEvent.VK_J);
                    break;
                case(60):
                    Controller.robot.keyPress(KeyEvent.VK_Q);
                    break;
                case(61):
                    Controller.robot.keyPress(KeyEvent.VK_2);
                    break;
                case(62):
                    Controller.robot.keyPress(KeyEvent.VK_W);
                    break;
                case(63):
                    Controller.robot.keyPress(KeyEvent.VK_3);
                    break;
                case(64):
                    Controller.robot.keyPress(KeyEvent.VK_E);
                    break;
                case(65):
                    Controller.robot.keyPress(KeyEvent.VK_R);
                    break;
                case(66):
                    Controller.robot.keyPress(KeyEvent.VK_5);
                    break;
                case(67):
                    Controller.robot.keyPress(KeyEvent.VK_T);
                    break;
                case(68):
                    Controller.robot.keyPress(KeyEvent.VK_6);
                    break;
                case(69):
                    Controller.robot.keyPress(KeyEvent.VK_Y);
                    break;
                case(70):
                    Controller.robot.keyPress(KeyEvent.VK_7);
                    break;
                case(71):
                    Controller.robot.keyPress(KeyEvent.VK_U);
                    break;
                case(72):
                    Controller.robot.keyPress(KeyEvent.VK_I);
                    break;
                case(73):
                    Controller.robot.keyPress(KeyEvent.VK_PERIOD);
                    break;
                case(74):
                    Controller.robot.keyPress(KeyEvent.VK_1);
                    break;
                case(75):
                    Controller.robot.keyPress(KeyEvent.VK_MINUS);
                    break;
                case(76):
                    Controller.robot.keyPress(KeyEvent.VK_4);
                    break;
                case(77):
                    Controller.robot.keyPress(KeyEvent.VK_8);
                    break;
                case(78):
                    Controller.robot.keyPress(KeyEvent.VK_C);
                    break;
                case(79):
                    Controller.robot.keyPress(KeyEvent.VK_9);
                    break;
                case(80):
                    Controller.robot.keyPress(KeyEvent.VK_COMMA);
                    break;
                case(81):
                    Controller.robot.keyPress(KeyEvent.VK_0);
                    break;
                case(82):
                    Controller.robot.keyPress(KeyEvent.VK_M);
                    break;
                case(83):
                    Controller.robot.keyPress(KeyEvent.VK_PLUS);
                    break;
                case(84):
                    Controller.robot.keyPress(KeyEvent.VK_O);
                    break;
                default:
                    Controller.robot.keyPress(KeyEvent.VK_Q);
                    break;
            }
        } else if(velocity == 0 && Main.canHoldNote.getValue()) {
            switch (hitNoteId) {
                case(48):
                    Controller.robot.keyRelease(KeyEvent.VK_A);
                    break;
                case(49):
                    Controller.robot.keyRelease(KeyEvent.VK_Z);
                    break;
                case(50):
                    Controller.robot.keyRelease(KeyEvent.VK_S);
                    break;
                case(51):
                    Controller.robot.keyRelease(KeyEvent.VK_X);
                    break;
                case(52):
                    Controller.robot.keyRelease(KeyEvent.VK_D);
                    break;
                case(53):
                    Controller.robot.keyRelease(KeyEvent.VK_F);
                    break;
                case(54):
                    Controller.robot.keyRelease(KeyEvent.VK_V);
                    break;
                case(55):
                    Controller.robot.keyRelease(KeyEvent.VK_G);
                    break;
                case(56):
                    Controller.robot.keyRelease(KeyEvent.VK_B);
                    break;
                case(57):
                    Controller.robot.keyRelease(KeyEvent.VK_H);
                    break;
                case(58):
                    Controller.robot.keyRelease(KeyEvent.VK_N);
                    break;
                case(59):
                    Controller.robot.keyRelease(KeyEvent.VK_J);
                    break;
                case(60):
                    Controller.robot.keyRelease(KeyEvent.VK_Q);
                    break;
                case(61):
                    Controller.robot.keyRelease(KeyEvent.VK_2);
                    break;
                case(62):
                    Controller.robot.keyRelease(KeyEvent.VK_W);
                    break;
                case(63):
                    Controller.robot.keyRelease(KeyEvent.VK_3);
                    break;
                case(64):
                    Controller.robot.keyRelease(KeyEvent.VK_E);
                    break;
                case(65):
                    Controller.robot.keyRelease(KeyEvent.VK_R);
                    break;
                case(66):
                    Controller.robot.keyRelease(KeyEvent.VK_5);
                    break;
                case(67):
                    Controller.robot.keyRelease(KeyEvent.VK_T);
                    break;
                case(68):
                    Controller.robot.keyRelease(KeyEvent.VK_6);
                    break;
                case(69):
                    Controller.robot.keyRelease(KeyEvent.VK_Y);
                    break;
                case(70):
                    Controller.robot.keyRelease(KeyEvent.VK_7);
                    break;
                case(71):
                    Controller.robot.keyRelease(KeyEvent.VK_U);
                    break;
                case(72):
                    Controller.robot.keyRelease(KeyEvent.VK_I);
                    break;
                case(73):
                    Controller.robot.keyRelease(KeyEvent.VK_PERIOD);
                    break;
                case(74):
                    Controller.robot.keyRelease(KeyEvent.VK_1);
                    break;
                case(75):
                    Controller.robot.keyRelease(KeyEvent.VK_MINUS);
                    break;
                case(76):
                    Controller.robot.keyRelease(KeyEvent.VK_4);
                    break;
                case(77):
                    Controller.robot.keyRelease(KeyEvent.VK_8);
                    break;
                case(78):
                    Controller.robot.keyRelease(KeyEvent.VK_C);
                    break;
                case(79):
                    Controller.robot.keyRelease(KeyEvent.VK_9);
                    break;
                case(80):
                    Controller.robot.keyRelease(KeyEvent.VK_COMMA);
                    break;
                case(81):
                    Controller.robot.keyRelease(KeyEvent.VK_0);
                    break;
                case(82):
                    Controller.robot.keyRelease(KeyEvent.VK_M);
                    break;
                case(83):
                    Controller.robot.keyRelease(KeyEvent.VK_PLUS);
                    break;
                case(84):
                    Controller.robot.keyRelease(KeyEvent.VK_O);
                    break;
                default:
                    Controller.robot.keyRelease(KeyEvent.VK_Q);
                    break;
            }
        } else if(velocity != 0 && !Main.canHoldNote.getValue()) {
            switch (hitNoteId) {
                case(21):
                    Main.canHoldNote.setValue(true);
                    break;
                case(48):
                    Controller.robot.keyPress(KeyEvent.VK_A);
                    Controller.robot.keyRelease(KeyEvent.VK_A);
                    break;
                case(49):
                    Controller.robot.keyPress(KeyEvent.VK_Z);
                    Controller.robot.keyRelease(KeyEvent.VK_Z);
                    break;
                case(50):
                    Controller.robot.keyPress(KeyEvent.VK_S);
                    Controller.robot.keyRelease(KeyEvent.VK_S);
                    break;
                case(51):
                    Controller.robot.keyPress(KeyEvent.VK_X);
                    Controller.robot.keyRelease(KeyEvent.VK_X);
                    break;
                case(52):
                    Controller.robot.keyPress(KeyEvent.VK_D);
                    Controller.robot.keyRelease(KeyEvent.VK_D);
                    break;
                case(53):
                    Controller.robot.keyPress(KeyEvent.VK_F);
                    Controller.robot.keyRelease(KeyEvent.VK_F);
                    break;
                case(54):
                    Controller.robot.keyPress(KeyEvent.VK_V);
                    Controller.robot.keyRelease(KeyEvent.VK_V);
                    break;
                case(55):
                    Controller.robot.keyPress(KeyEvent.VK_G);
                    Controller.robot.keyRelease(KeyEvent.VK_G);
                    break;
                case(56):
                    Controller.robot.keyPress(KeyEvent.VK_B);
                    Controller.robot.keyRelease(KeyEvent.VK_B);
                    break;
                case(57):
                    Controller.robot.keyPress(KeyEvent.VK_H);
                    Controller.robot.keyRelease(KeyEvent.VK_H);
                    break;
                case(58):
                    Controller.robot.keyPress(KeyEvent.VK_N);
                    Controller.robot.keyRelease(KeyEvent.VK_N);
                    break;
                case(59):
                    Controller.robot.keyPress(KeyEvent.VK_J);
                    Controller.robot.keyRelease(KeyEvent.VK_J);
                    break;
                case(60):
                    Controller.robot.keyPress(KeyEvent.VK_Q);
                    Controller.robot.keyRelease(KeyEvent.VK_Q);
                    break;
                case(61):
                    Controller.robot.keyPress(KeyEvent.VK_2);
                    Controller.robot.keyRelease(KeyEvent.VK_2);
                    break;
                case(62):
                    Controller.robot.keyPress(KeyEvent.VK_W);
                    Controller.robot.keyRelease(KeyEvent.VK_W);
                    break;
                case(63):
                    Controller.robot.keyPress(KeyEvent.VK_3);
                    Controller.robot.keyRelease(KeyEvent.VK_3);
                    break;
                case(64):
                    Controller.robot.keyPress(KeyEvent.VK_E);
                    Controller.robot.keyRelease(KeyEvent.VK_E);
                    break;
                case(65):
                    Controller.robot.keyPress(KeyEvent.VK_R);
                    Controller.robot.keyRelease(KeyEvent.VK_R);
                    break;
                case(66):
                    Controller.robot.keyPress(KeyEvent.VK_5);
                    Controller.robot.keyRelease(KeyEvent.VK_5);
                    break;
                case(67):
                    Controller.robot.keyPress(KeyEvent.VK_T);
                    Controller.robot.keyRelease(KeyEvent.VK_T);
                    break;
                case(68):
                    Controller.robot.keyPress(KeyEvent.VK_6);
                    Controller.robot.keyRelease(KeyEvent.VK_6);
                    break;
                case(69):
                    Controller.robot.keyPress(KeyEvent.VK_Y);
                    Controller.robot.keyRelease(KeyEvent.VK_Y);
                    break;
                case(70):
                    Controller.robot.keyPress(KeyEvent.VK_7);
                    Controller.robot.keyRelease(KeyEvent.VK_7);
                    break;
                case(71):
                    Controller.robot.keyPress(KeyEvent.VK_U);
                    Controller.robot.keyRelease(KeyEvent.VK_U);
                    break;
                case(72):
                    Controller.robot.keyPress(KeyEvent.VK_I);
                    Controller.robot.keyRelease(KeyEvent.VK_I);
                    break;
                case(73):
                    Controller.robot.keyPress(KeyEvent.VK_PERIOD);
                    Controller.robot.keyRelease(KeyEvent.VK_PERIOD);
                    break;
                case(74):
                    Controller.robot.keyPress(KeyEvent.VK_1);
                    Controller.robot.keyRelease(KeyEvent.VK_1);
                    break;
                case(75):
                    Controller.robot.keyPress(KeyEvent.VK_MINUS);
                    Controller.robot.keyRelease(KeyEvent.VK_MINUS);
                    break;
                case(76):
                    Controller.robot.keyPress(KeyEvent.VK_4);
                    Controller.robot.keyRelease(KeyEvent.VK_4);
                    break;
                case(77):
                    Controller.robot.keyPress(KeyEvent.VK_8);
                    Controller.robot.keyRelease(KeyEvent.VK_8);
                    break;
                case(78):
                    Controller.robot.keyPress(KeyEvent.VK_C);
                    Controller.robot.keyRelease(KeyEvent.VK_C);
                    break;
                case(79):
                    Controller.robot.keyPress(KeyEvent.VK_9);
                    Controller.robot.keyRelease(KeyEvent.VK_9);
                    break;
                case(80):
                    Controller.robot.keyPress(KeyEvent.VK_COMMA);
                    Controller.robot.keyRelease(KeyEvent.VK_COMMA);
                    break;
                case(81):
                    Controller.robot.keyPress(KeyEvent.VK_0);
                    Controller.robot.keyRelease(KeyEvent.VK_0);
                    break;
                case(82):
                    Controller.robot.keyPress(KeyEvent.VK_M);
                    Controller.robot.keyRelease(KeyEvent.VK_M);
                    break;
                case(83):
                    Controller.robot.keyPress(KeyEvent.VK_PLUS);
                    Controller.robot.keyRelease(KeyEvent.VK_PLUS);
                    break;
                case(84):
                    Controller.robot.keyPress(KeyEvent.VK_O);
                    Controller.robot.keyRelease(KeyEvent.VK_O);
                    break;
                default:
                    Controller.robot.keyPress(KeyEvent.VK_Q);
                    Controller.robot.keyRelease(KeyEvent.VK_Q);
                    break;
            }
        }
        System.out.println(hitNoteId);
    }

    @Override
    public void close() {

    }
}
